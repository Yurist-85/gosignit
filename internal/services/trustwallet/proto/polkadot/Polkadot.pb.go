// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: Polkadot.proto

package polkadot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Network int32

const (
	Network_POLKADOT Network = 0
	Network_KUSAMA   Network = 2
)

// Enum value maps for Network.
var (
	Network_name = map[int32]string{
		0: "POLKADOT",
		2: "KUSAMA",
	}
	Network_value = map[string]int32{
		"POLKADOT": 0,
		"KUSAMA":   2,
	}
)

func (x Network) Enum() *Network {
	p := new(Network)
	*p = x
	return p
}

func (x Network) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Network) Descriptor() protoreflect.EnumDescriptor {
	return file_Polkadot_proto_enumTypes[0].Descriptor()
}

func (Network) Type() protoreflect.EnumType {
	return &file_Polkadot_proto_enumTypes[0]
}

func (x Network) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Network.Descriptor instead.
func (Network) EnumDescriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{0}
}

type RewardDestination int32

const (
	RewardDestination_STAKED     RewardDestination = 0
	RewardDestination_STASH      RewardDestination = 1
	RewardDestination_CONTROLLER RewardDestination = 2
)

// Enum value maps for RewardDestination.
var (
	RewardDestination_name = map[int32]string{
		0: "STAKED",
		1: "STASH",
		2: "CONTROLLER",
	}
	RewardDestination_value = map[string]int32{
		"STAKED":     0,
		"STASH":      1,
		"CONTROLLER": 2,
	}
)

func (x RewardDestination) Enum() *RewardDestination {
	p := new(RewardDestination)
	*p = x
	return p
}

func (x RewardDestination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardDestination) Descriptor() protoreflect.EnumDescriptor {
	return file_Polkadot_proto_enumTypes[1].Descriptor()
}

func (RewardDestination) Type() protoreflect.EnumType {
	return &file_Polkadot_proto_enumTypes[1]
}

func (x RewardDestination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardDestination.Descriptor instead.
func (RewardDestination) EnumDescriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{1}
}

type Era struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// recent block number (called phase in polkadot code), should match block hash
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// length of period, calculated from block number, e.g. 64
	Period uint64 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Era) Reset() {
	*x = Era{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Era) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Era) ProtoMessage() {}

func (x *Era) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Era.ProtoReflect.Descriptor instead.
func (*Era) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{0}
}

func (x *Era) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Era) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageOneof:
	//	*Balance_Transfer_
	MessageOneof isBalance_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{1}
}

func (m *Balance) GetMessageOneof() isBalance_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *Balance) GetTransfer() *Balance_Transfer {
	if x, ok := x.GetMessageOneof().(*Balance_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

type isBalance_MessageOneof interface {
	isBalance_MessageOneof()
}

type Balance_Transfer_ struct {
	Transfer *Balance_Transfer `protobuf:"bytes,1,opt,name=transfer,proto3,oneof"`
}

func (*Balance_Transfer_) isBalance_MessageOneof() {}

type Staking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageOneof:
	//	*Staking_Bond_
	//	*Staking_BondAndNominate_
	//	*Staking_BondExtra_
	//	*Staking_Unbond_
	//	*Staking_WithdrawUnbonded_
	//	*Staking_Nominate_
	//	*Staking_Chill_
	MessageOneof isStaking_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *Staking) Reset() {
	*x = Staking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking) ProtoMessage() {}

func (x *Staking) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking.ProtoReflect.Descriptor instead.
func (*Staking) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2}
}

func (m *Staking) GetMessageOneof() isStaking_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *Staking) GetBond() *Staking_Bond {
	if x, ok := x.GetMessageOneof().(*Staking_Bond_); ok {
		return x.Bond
	}
	return nil
}

func (x *Staking) GetBondAndNominate() *Staking_BondAndNominate {
	if x, ok := x.GetMessageOneof().(*Staking_BondAndNominate_); ok {
		return x.BondAndNominate
	}
	return nil
}

func (x *Staking) GetBondExtra() *Staking_BondExtra {
	if x, ok := x.GetMessageOneof().(*Staking_BondExtra_); ok {
		return x.BondExtra
	}
	return nil
}

func (x *Staking) GetUnbond() *Staking_Unbond {
	if x, ok := x.GetMessageOneof().(*Staking_Unbond_); ok {
		return x.Unbond
	}
	return nil
}

func (x *Staking) GetWithdrawUnbonded() *Staking_WithdrawUnbonded {
	if x, ok := x.GetMessageOneof().(*Staking_WithdrawUnbonded_); ok {
		return x.WithdrawUnbonded
	}
	return nil
}

func (x *Staking) GetNominate() *Staking_Nominate {
	if x, ok := x.GetMessageOneof().(*Staking_Nominate_); ok {
		return x.Nominate
	}
	return nil
}

func (x *Staking) GetChill() *Staking_Chill {
	if x, ok := x.GetMessageOneof().(*Staking_Chill_); ok {
		return x.Chill
	}
	return nil
}

type isStaking_MessageOneof interface {
	isStaking_MessageOneof()
}

type Staking_Bond_ struct {
	Bond *Staking_Bond `protobuf:"bytes,1,opt,name=bond,proto3,oneof"`
}

type Staking_BondAndNominate_ struct {
	BondAndNominate *Staking_BondAndNominate `protobuf:"bytes,2,opt,name=bond_and_nominate,json=bondAndNominate,proto3,oneof"`
}

type Staking_BondExtra_ struct {
	BondExtra *Staking_BondExtra `protobuf:"bytes,3,opt,name=bond_extra,json=bondExtra,proto3,oneof"`
}

type Staking_Unbond_ struct {
	Unbond *Staking_Unbond `protobuf:"bytes,4,opt,name=unbond,proto3,oneof"`
}

type Staking_WithdrawUnbonded_ struct {
	WithdrawUnbonded *Staking_WithdrawUnbonded `protobuf:"bytes,5,opt,name=withdraw_unbonded,json=withdrawUnbonded,proto3,oneof"`
}

type Staking_Nominate_ struct {
	Nominate *Staking_Nominate `protobuf:"bytes,6,opt,name=nominate,proto3,oneof"`
}

type Staking_Chill_ struct {
	Chill *Staking_Chill `protobuf:"bytes,7,opt,name=chill,proto3,oneof"`
}

func (*Staking_Bond_) isStaking_MessageOneof() {}

func (*Staking_BondAndNominate_) isStaking_MessageOneof() {}

func (*Staking_BondExtra_) isStaking_MessageOneof() {}

func (*Staking_Unbond_) isStaking_MessageOneof() {}

func (*Staking_WithdrawUnbonded_) isStaking_MessageOneof() {}

func (*Staking_Nominate_) isStaking_MessageOneof() {}

func (*Staking_Chill_) isStaking_MessageOneof() {}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recent block hash, or genesis hash if era is not set
	BlockHash   []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	GenesisHash []byte `protobuf:"bytes,2,opt,name=genesis_hash,json=genesisHash,proto3" json:"genesis_hash,omitempty"`
	// Current account nonce
	Nonce              uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	SpecVersion        uint32 `protobuf:"varint,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	TransactionVersion uint32 `protobuf:"varint,5,opt,name=transaction_version,json=transactionVersion,proto3" json:"transaction_version,omitempty"`
	Tip                []byte `protobuf:"bytes,6,opt,name=tip,proto3" json:"tip,omitempty"` // big integer
	// Optional time validity limit, recommended, for replay-protection.  Empty means Immortal.
	Era        *Era    `protobuf:"bytes,7,opt,name=era,proto3" json:"era,omitempty"`
	PrivateKey []byte  `protobuf:"bytes,8,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Network    Network `protobuf:"varint,9,opt,name=network,proto3,enum=TW.Polkadot.Proto.Network" json:"network,omitempty"`
	// Types that are assignable to MessageOneof:
	//	*SigningInput_BalanceCall
	//	*SigningInput_StakingCall
	MessageOneof isSigningInput_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3}
}

func (x *SigningInput) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *SigningInput) GetGenesisHash() []byte {
	if x != nil {
		return x.GenesisHash
	}
	return nil
}

func (x *SigningInput) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SigningInput) GetSpecVersion() uint32 {
	if x != nil {
		return x.SpecVersion
	}
	return 0
}

func (x *SigningInput) GetTransactionVersion() uint32 {
	if x != nil {
		return x.TransactionVersion
	}
	return 0
}

func (x *SigningInput) GetTip() []byte {
	if x != nil {
		return x.Tip
	}
	return nil
}

func (x *SigningInput) GetEra() *Era {
	if x != nil {
		return x.Era
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_POLKADOT
}

func (m *SigningInput) GetMessageOneof() isSigningInput_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *SigningInput) GetBalanceCall() *Balance {
	if x, ok := x.GetMessageOneof().(*SigningInput_BalanceCall); ok {
		return x.BalanceCall
	}
	return nil
}

func (x *SigningInput) GetStakingCall() *Staking {
	if x, ok := x.GetMessageOneof().(*SigningInput_StakingCall); ok {
		return x.StakingCall
	}
	return nil
}

type isSigningInput_MessageOneof interface {
	isSigningInput_MessageOneof()
}

type SigningInput_BalanceCall struct {
	BalanceCall *Balance `protobuf:"bytes,10,opt,name=balance_call,json=balanceCall,proto3,oneof"`
}

type SigningInput_StakingCall struct {
	StakingCall *Staking `protobuf:"bytes,11,opt,name=staking_call,json=stakingCall,proto3,oneof"`
}

func (*SigningInput_BalanceCall) isSigningInput_MessageOneof() {}

func (*SigningInput_StakingCall) isSigningInput_MessageOneof() {}

// Transaction signing output.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed and encoded transaction bytes.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4}
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

type Balance_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Value     []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // big integer
}

func (x *Balance_Transfer) Reset() {
	*x = Balance_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance_Transfer) ProtoMessage() {}

func (x *Balance_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance_Transfer.ProtoReflect.Descriptor instead.
func (*Balance_Transfer) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Balance_Transfer) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *Balance_Transfer) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Staking_Bond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller        string            `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Value             []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	RewardDestination RewardDestination `protobuf:"varint,3,opt,name=reward_destination,json=rewardDestination,proto3,enum=TW.Polkadot.Proto.RewardDestination" json:"reward_destination,omitempty"`
}

func (x *Staking_Bond) Reset() {
	*x = Staking_Bond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_Bond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Bond) ProtoMessage() {}

func (x *Staking_Bond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Bond.ProtoReflect.Descriptor instead.
func (*Staking_Bond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Staking_Bond) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *Staking_Bond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_Bond) GetRewardDestination() RewardDestination {
	if x != nil {
		return x.RewardDestination
	}
	return RewardDestination_STAKED
}

type Staking_BondAndNominate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller        string            `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Value             []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	RewardDestination RewardDestination `protobuf:"varint,3,opt,name=reward_destination,json=rewardDestination,proto3,enum=TW.Polkadot.Proto.RewardDestination" json:"reward_destination,omitempty"`
	Nominators        []string          `protobuf:"bytes,4,rep,name=nominators,proto3" json:"nominators,omitempty"`
}

func (x *Staking_BondAndNominate) Reset() {
	*x = Staking_BondAndNominate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_BondAndNominate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_BondAndNominate) ProtoMessage() {}

func (x *Staking_BondAndNominate) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_BondAndNominate.ProtoReflect.Descriptor instead.
func (*Staking_BondAndNominate) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Staking_BondAndNominate) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *Staking_BondAndNominate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_BondAndNominate) GetRewardDestination() RewardDestination {
	if x != nil {
		return x.RewardDestination
	}
	return RewardDestination_STAKED
}

func (x *Staking_BondAndNominate) GetNominators() []string {
	if x != nil {
		return x.Nominators
	}
	return nil
}

type Staking_BondExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Staking_BondExtra) Reset() {
	*x = Staking_BondExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_BondExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_BondExtra) ProtoMessage() {}

func (x *Staking_BondExtra) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_BondExtra.ProtoReflect.Descriptor instead.
func (*Staking_BondExtra) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Staking_BondExtra) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Staking_Unbond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Staking_Unbond) Reset() {
	*x = Staking_Unbond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_Unbond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Unbond) ProtoMessage() {}

func (x *Staking_Unbond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Unbond.ProtoReflect.Descriptor instead.
func (*Staking_Unbond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Staking_Unbond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Staking_WithdrawUnbonded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlashingSpans int32 `protobuf:"varint,1,opt,name=slashing_spans,json=slashingSpans,proto3" json:"slashing_spans,omitempty"`
}

func (x *Staking_WithdrawUnbonded) Reset() {
	*x = Staking_WithdrawUnbonded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_WithdrawUnbonded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_WithdrawUnbonded) ProtoMessage() {}

func (x *Staking_WithdrawUnbonded) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_WithdrawUnbonded.ProtoReflect.Descriptor instead.
func (*Staking_WithdrawUnbonded) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Staking_WithdrawUnbonded) GetSlashingSpans() int32 {
	if x != nil {
		return x.SlashingSpans
	}
	return 0
}

type Staking_Nominate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nominators []string `protobuf:"bytes,1,rep,name=nominators,proto3" json:"nominators,omitempty"`
}

func (x *Staking_Nominate) Reset() {
	*x = Staking_Nominate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_Nominate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Nominate) ProtoMessage() {}

func (x *Staking_Nominate) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Nominate.ProtoReflect.Descriptor instead.
func (*Staking_Nominate) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 5}
}

func (x *Staking_Nominate) GetNominators() []string {
	if x != nil {
		return x.Nominators
	}
	return nil
}

type Staking_Chill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Staking_Chill) Reset() {
	*x = Staking_Chill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Polkadot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staking_Chill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Chill) ProtoMessage() {}

func (x *Staking_Chill) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Chill.ProtoReflect.Descriptor instead.
func (*Staking_Chill) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2, 6}
}

var File_Polkadot_proto protoreflect.FileDescriptor

var file_Polkadot_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x03, 0x45, 0x72, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x1a, 0x3f, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x8e, 0x08, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x62, 0x6f, 0x6e,
	0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64,
	0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x42, 0x6f, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x62, 0x6f, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x62, 0x6f, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c,
	0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6f, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x3b, 0x0a, 0x06, 0x75, 0x6e,
	0x62, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x57, 0x2e,
	0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x55, 0x6e, 0x62, 0x6f, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61,
	0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61,
	0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x6c,
	0x1a, 0x91, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x53, 0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x54, 0x57,
	0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbc, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6e, 0x64, 0x41, 0x6e, 0x64,
	0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x53,
	0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e,
	0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x1a, 0x21, 0x0a, 0x09, 0x42, 0x6f, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1e, 0x0a, 0x06, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x39, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x61, 0x6e,
	0x73, 0x1a, 0x2a, 0x0a, 0x08, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x07, 0x0a,
	0x05, 0x43, 0x68, 0x69, 0x6c, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xe0, 0x03, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x74, 0x69, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x72, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x61, 0x52, 0x03, 0x65, 0x72, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x34, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3f, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x57, 0x2e, 0x50, 0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x2a, 0x23, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x4c, 0x4b, 0x41, 0x44, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4b, 0x55, 0x53, 0x41, 0x4d, 0x41, 0x10, 0x02, 0x2a, 0x3a, 0x0a, 0x11, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x54, 0x41, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x4c, 0x45, 0x52, 0x10, 0x02, 0x42, 0x3d, 0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x24, 0x61, 0x6c, 0x66, 0x61, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65,
	0x6d, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x6c,
	0x6b, 0x61, 0x64, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Polkadot_proto_rawDescOnce sync.Once
	file_Polkadot_proto_rawDescData = file_Polkadot_proto_rawDesc
)

func file_Polkadot_proto_rawDescGZIP() []byte {
	file_Polkadot_proto_rawDescOnce.Do(func() {
		file_Polkadot_proto_rawDescData = protoimpl.X.CompressGZIP(file_Polkadot_proto_rawDescData)
	})
	return file_Polkadot_proto_rawDescData
}

var file_Polkadot_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Polkadot_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_Polkadot_proto_goTypes = []interface{}{
	(Network)(0),                     // 0: TW.Polkadot.Proto.Network
	(RewardDestination)(0),           // 1: TW.Polkadot.Proto.RewardDestination
	(*Era)(nil),                      // 2: TW.Polkadot.Proto.Era
	(*Balance)(nil),                  // 3: TW.Polkadot.Proto.Balance
	(*Staking)(nil),                  // 4: TW.Polkadot.Proto.Staking
	(*SigningInput)(nil),             // 5: TW.Polkadot.Proto.SigningInput
	(*SigningOutput)(nil),            // 6: TW.Polkadot.Proto.SigningOutput
	(*Balance_Transfer)(nil),         // 7: TW.Polkadot.Proto.Balance.Transfer
	(*Staking_Bond)(nil),             // 8: TW.Polkadot.Proto.Staking.Bond
	(*Staking_BondAndNominate)(nil),  // 9: TW.Polkadot.Proto.Staking.BondAndNominate
	(*Staking_BondExtra)(nil),        // 10: TW.Polkadot.Proto.Staking.BondExtra
	(*Staking_Unbond)(nil),           // 11: TW.Polkadot.Proto.Staking.Unbond
	(*Staking_WithdrawUnbonded)(nil), // 12: TW.Polkadot.Proto.Staking.WithdrawUnbonded
	(*Staking_Nominate)(nil),         // 13: TW.Polkadot.Proto.Staking.Nominate
	(*Staking_Chill)(nil),            // 14: TW.Polkadot.Proto.Staking.Chill
}
var file_Polkadot_proto_depIdxs = []int32{
	7,  // 0: TW.Polkadot.Proto.Balance.transfer:type_name -> TW.Polkadot.Proto.Balance.Transfer
	8,  // 1: TW.Polkadot.Proto.Staking.bond:type_name -> TW.Polkadot.Proto.Staking.Bond
	9,  // 2: TW.Polkadot.Proto.Staking.bond_and_nominate:type_name -> TW.Polkadot.Proto.Staking.BondAndNominate
	10, // 3: TW.Polkadot.Proto.Staking.bond_extra:type_name -> TW.Polkadot.Proto.Staking.BondExtra
	11, // 4: TW.Polkadot.Proto.Staking.unbond:type_name -> TW.Polkadot.Proto.Staking.Unbond
	12, // 5: TW.Polkadot.Proto.Staking.withdraw_unbonded:type_name -> TW.Polkadot.Proto.Staking.WithdrawUnbonded
	13, // 6: TW.Polkadot.Proto.Staking.nominate:type_name -> TW.Polkadot.Proto.Staking.Nominate
	14, // 7: TW.Polkadot.Proto.Staking.chill:type_name -> TW.Polkadot.Proto.Staking.Chill
	2,  // 8: TW.Polkadot.Proto.SigningInput.era:type_name -> TW.Polkadot.Proto.Era
	0,  // 9: TW.Polkadot.Proto.SigningInput.network:type_name -> TW.Polkadot.Proto.Network
	3,  // 10: TW.Polkadot.Proto.SigningInput.balance_call:type_name -> TW.Polkadot.Proto.Balance
	4,  // 11: TW.Polkadot.Proto.SigningInput.staking_call:type_name -> TW.Polkadot.Proto.Staking
	1,  // 12: TW.Polkadot.Proto.Staking.Bond.reward_destination:type_name -> TW.Polkadot.Proto.RewardDestination
	1,  // 13: TW.Polkadot.Proto.Staking.BondAndNominate.reward_destination:type_name -> TW.Polkadot.Proto.RewardDestination
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_Polkadot_proto_init() }
func file_Polkadot_proto_init() {
	if File_Polkadot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Polkadot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Era); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_Bond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_BondAndNominate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_BondExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_Unbond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_WithdrawUnbonded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_Nominate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Polkadot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staking_Chill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Polkadot_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Balance_Transfer_)(nil),
	}
	file_Polkadot_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Staking_Bond_)(nil),
		(*Staking_BondAndNominate_)(nil),
		(*Staking_BondExtra_)(nil),
		(*Staking_Unbond_)(nil),
		(*Staking_WithdrawUnbonded_)(nil),
		(*Staking_Nominate_)(nil),
		(*Staking_Chill_)(nil),
	}
	file_Polkadot_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SigningInput_BalanceCall)(nil),
		(*SigningInput_StakingCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Polkadot_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Polkadot_proto_goTypes,
		DependencyIndexes: file_Polkadot_proto_depIdxs,
		EnumInfos:         file_Polkadot_proto_enumTypes,
		MessageInfos:      file_Polkadot_proto_msgTypes,
	}.Build()
	File_Polkadot_proto = out.File
	file_Polkadot_proto_rawDesc = nil
	file_Polkadot_proto_goTypes = nil
	file_Polkadot_proto_depIdxs = nil
}
