package trustwallet

// #cgo CFLAGS: -I../../../lib/trustwallet/include
// #cgo LDFLAGS: -L../../../lib/trustwallet/build -L../../../lib/trustwallet/build/trezor-crypto -lTrustWalletCore -lprotobuf -lTrezorCrypto -lc++ -lm
// #include <TrustWalletCore/TWBlockchain.h>
// #include <TrustWalletCore/TWPurpose.h>
// #include <TrustWalletCore/TWCurve.h>
// #include <TrustWalletCore/TWHDVersion.h>
// #include <TrustWalletCore/TWPublicKeyType.h>
// #include <TrustWalletCore/TWHRP.h>
// #include <TrustWalletCore/TWCoinTypeConfiguration.h>
import "C"
import (
	"github.com/pkg/errors"
)

// CoinInfo proxy model for coin info
type CoinInfo struct {
	ID                     string                 `json:"id"`
	Name                   string                 `json:"name"`
	Blockchain             C.enum_TWBlockchain    `json:"-"`
	Purpose                C.enum_TWPurpose       `json:"-"`
	Curve                  C.enum_TWCurve         `json:"-"`
	XpubVersion            C.enum_TWHDVersion     `json:"-"`
	XprvVersion            C.enum_TWHDVersion     `json:"-"`
	DerivationPath         string                 `json:"derivation_path"`
	PublicKeyType          C.enum_TWPublicKeyType `json:"-"`
	StaticPrefix           byte                   `json:"-"`
	P2pkhPrefix            byte                   `json:"-"`
	P2shPrefix             byte                   `json:"-"`
	Hrp                    C.enum_TWHRP           `json:"-"`
	Symbol                 string                 `json:"symbol"`
	Decimals               int                    `json:"decimals"`
	ExplorerTransactionUrl string                 `json:"explorer_transaction_url"`
	ExplorerAccountUrl     string                 `json:"explorer_account_url"`
	CoinType               C.enum_TWCoinType      `json:"-"`
}

// GetCoins returns the list of supported coins
func GetCoins() []string {
	return []string{
		"bitcoin",
		"litecoin",
		"doge",
		"dash",
		"viacoin",
		"groestlcoin",
		"digibyte",
		"monacoin",
		"decred",
		"ethereum",
		"classic",
		"icon",
		"cosmos",
		"zcash",
		"zcoin",
		"ripple",
		"bitcoincash",
		"stellar",
		"bitcoingold",
		"nano",
		"ravencoin",
		"poa",
		"eos",
		"tron",
		"fio",
		"nimiq",
		"algorand",
		"iotex",
		"zilliqa",
		"terra",
		"polkadot",
		"near",
		"aion",
		"kusama",
		"aeternity",
		"kava",
		"filecoin",
		"oasis",
		"bluzelle",
		"band",
		"theta",
		"solana",
		"elrond",
		"binance",
		"vechain",
		"callisto",
		"neo",
		"tomochain",
		"thorchain",
		"polygon",
		"thundertoken",
		"harmony",
		"ontology",
		"tezos",
		"cardano",
		"kin",
		"qtum",
		"nebulas",
		"gochain",
		"nuls",
		"zelcash",
		"wanchain",
		"waves",
		"optimism",
		"heco",
		"bsc",
		"arbitrum",
		"smartchain",
	}
}

// CoinTypeByIdString returns CoinType for a given id string.
func CoinTypeByIdString(id string) (*uint32, error) {
	coin, err := CoinInfoByIdString(id)
	if err != nil {
		return nil, errors.Wrap(err, "get coin info by id")
	}

	return &coin.CoinType, nil
}

// CoinInfoByIdString returns CoinInfo for a given id string.
func CoinInfoByIdString(id string) (*CoinInfo, error) {
	var coin CoinInfo

	switch id {
	case "bitcoin":
		coin = CoinInfo{
			"bitcoin",
			"Bitcoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/0'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			5,
			C.TWHRPBitcoin,
			"BTC",
			8,
			"https://blockchair.com/bitcoin/transaction/",
			"https://blockchair.com/bitcoin/address/",
			0,
		}
	case "litecoin":
		coin = CoinInfo{
			"litecoin",
			"Litecoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/2'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			48,
			50,
			C.TWHRPLitecoin,
			"LTC",
			8,
			"https://blockchair.com/litecoin/transaction/",
			"https://blockchair.com/litecoin/address/",
			2,
		}
	case "doge":
		coin = CoinInfo{
			"doge",
			"Dogecoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionDGUB,
			C.TWHDVersionDGPV,
			"m/44'/3'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			30,
			22,
			C.TWHRPUnknown,
			"DOGE",
			8,
			"https://blockchair.com/dogecoin/transaction/",
			"https://blockchair.com/dogecoin/address/",
			3,
		}
	case "dash":
		coin = CoinInfo{
			"dash",
			"Dash",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/5'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			76,
			16,
			C.TWHRPUnknown,
			"DASH",
			8,
			"https://blockchair.com/dash/transaction/",
			"https://blockchair.com/dash/address/",
			5,
		}
	case "viacoin":
		coin = CoinInfo{
			"viacoin",
			"Viacoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/14'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			71,
			33,
			C.TWHRPViacoin,
			"VIA",
			8,
			"https://explorer.viacoin.org/tx/",
			"https://explorer.viacoin.org/address/",
			14,
		}
	case "groestlcoin":
		coin = CoinInfo{
			"groestlcoin",
			"Groestlcoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/17'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			36,
			5,
			C.TWHRPGroestlcoin,
			"GRS",
			8,
			"https://blockchair.com/groestlcoin/transaction/",
			"https://blockchair.com/groestlcoin/address/",
			17,
		}
	case "digibyte":
		coin = CoinInfo{
			"digibyte",
			"DigiByte",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/20'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			30,
			63,
			C.TWHRPDigiByte,
			"DGB",
			8,
			"https://digiexplorer.info/tx/",
			"https://digiexplorer.info/address/",
			20,
		}
	case "monacoin":
		coin = CoinInfo{
			"monacoin",
			"Monacoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/22'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			50,
			55,
			C.TWHRPMonacoin,
			"MONA",
			8,
			"https://blockbook.electrum-mona.org/tx/",
			"https://blockbook.electrum-mona.org/address/",
			22,
		}
	case "decred":
		coin = CoinInfo{
			"decred",
			"Decred",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionDPUB,
			C.TWHDVersionDPRV,
			"m/44'/42'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			7,
			63,
			26,
			C.TWHRPUnknown,
			"DCR",
			8,
			"https://dcrdata.decred.org/tx/",
			"https://dcrdata.decred.org/address/",
			42,
		}
	case "ethereum":
		coin = CoinInfo{
			"ethereum",
			"Ethereum",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ETH",
			18,
			"https://etherscan.io/tx/",
			"https://etherscan.io/address/",
			60,
		}
	case "classic":
		coin = CoinInfo{
			"classic",
			"Ethereum Classic",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/61'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ETC",
			18,
			"https://blockscout.com/etc/mainnet/tx/",
			"https://blockscout.com/etc/mainnet/address/",
			61,
		}
	case "icon":
		coin = CoinInfo{
			"icon",
			"ICON",
			C.TWBlockchainIcon,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/74'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ICX",
			18,
			"https://tracker.icon.foundation/transaction/",
			"https://tracker.icon.foundation/address/",
			74,
		}
	case "cosmos":
		coin = CoinInfo{
			"cosmos",
			"Cosmos",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/118'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPCosmos,
			"ATOM",
			6,
			"https://www.mintscan.io/txs/",
			"https://www.mintscan.io/account/",
			118,
		}
	case "zcash":
		coin = CoinInfo{
			"zcash",
			"Zcash",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/133'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			28,
			184,
			189,
			C.TWHRPUnknown,
			"ZEC",
			8,
			"https://blockchair.com/zcash/transaction/",
			"https://blockchair.com/zcash/address/",
			133,
		}
	case "zcoin":
		coin = CoinInfo{
			"zcoin",
			"Firo",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/136'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			82,
			7,
			C.TWHRPUnknown,
			"FIRO",
			8,
			"https://explorer.firo.org/tx/",
			"https://explorer.firo.org/address/",
			136,
		}
	case "ripple":
		coin = CoinInfo{
			"ripple",
			"XRP",
			C.TWBlockchainRipple,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/144'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"XRP",
			6,
			"https://bithomp.com/explorer/",
			"https://bithomp.com/explorer/",
			144,
		}
	case "bitcoincash":
		coin = CoinInfo{
			"bitcoincash",
			"Bitcoin Cash",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/145'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			5,
			C.TWHRPBitcoinCash,
			"BCH",
			8,
			"https://blockchair.com/bitcoin-cash/transaction/",
			"https://blockchair.com/bitcoin-cash/address/",
			145,
		}
	case "stellar":
		coin = CoinInfo{
			"stellar",
			"Stellar",
			C.TWBlockchainStellar,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/148'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"XLM",
			7,
			"https://blockchair.com/stellar/transaction/",
			"https://blockchair.com/stellar/account/",
			148,
		}
	case "bitcoingold":
		coin = CoinInfo{
			"bitcoingold",
			"Bitcoin Gold",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP84,
			C.TWCurveSECP256k1,
			C.TWHDVersionZPUB,
			C.TWHDVersionZPRV,
			"m/84'/156'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			38,
			23,
			C.TWHRPBitcoinGold,
			"BTG",
			8,
			"https://explorer.bitcoingold.org/insight/tx/",
			"https://explorer.bitcoingold.org/insight/address/",
			156,
		}
	case "nano":
		coin = CoinInfo{
			"nano",
			"Nano",
			C.TWBlockchainNano,
			C.TWPurposeBIP44,
			C.TWCurveED25519Blake2bNano,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/165'/0'",
			C.TWPublicKeyTypeED25519Blake2b,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NANO",
			30,
			"https://nanocrawler.cc/explorer/block/",
			"https://nanocrawler.cc/explorer/account/",
			165,
		}
	case "ravencoin":
		coin = CoinInfo{
			"ravencoin",
			"Ravencoin",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/175'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			60,
			122,
			C.TWHRPUnknown,
			"RVN",
			8,
			"https://ravencoin.network/tx/",
			"https://ravencoin.network/address/",
			175,
		}
	case "poa":
		coin = CoinInfo{
			"poa",
			"POA NeC.TWork",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/178'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"POA",
			18,
			"https://blockscout.com/poa/core/tx/",
			"https://blockscout.com/poa/core/address/",
			178,
		}
	case "eos":
		coin = CoinInfo{
			"eos",
			"EOS",
			C.TWBlockchainEOS,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/194'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"EOS",
			4,
			"https://bloks.io/transaction/",
			"https://bloks.io/account/",
			194,
		}
	case "tron":
		coin = CoinInfo{
			"tron",
			"Tron",
			C.TWBlockchainTron,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/195'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"TRX",
			6,
			"https://tronscan.org/#/transaction/",
			"https://tronscan.org/#/address/",
			195,
		}
	case "fio":
		coin = CoinInfo{
			"fio",
			"FIO",
			C.TWBlockchainFIO,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/235'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"FIO",
			9,
			"https://explorer.fioprotocol.io/transaction/",
			"https://explorer.fioprotocol.io/account/",
			235,
		}
	case "nimiq":
		coin = CoinInfo{
			"nimiq",
			"Nimiq",
			C.TWBlockchainNimiq,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/242'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NIM",
			5,
			"https://nimiq.watch/#",
			"https://nimiq.watch/#",
			242,
		}
	case "algorand":
		coin = CoinInfo{
			"algorand",
			"Algorand",
			C.TWBlockchainAlgorand,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/283'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ALGO",
			6,
			"https://algoexplorer.io/tx/",
			"https://algoexplorer.io/address/",
			283,
		}
	case "iotex":
		coin = CoinInfo{
			"iotex",
			"IoTeX",
			C.TWBlockchainIoTeX,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/304'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPIoTeX,
			"IOTX",
			18,
			"https://iotexscan.io/action/",
			"https://iotexscan.io/address/",
			304,
		}
	case "zilliqa":
		coin = CoinInfo{
			"zilliqa",
			"Zilliqa",
			C.TWBlockchainZilliqa,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/313'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPZilliqa,
			"ZIL",
			12,
			"https://viewblock.io/zilliqa/tx/",
			"https://viewblock.io/zilliqa/address/",
			313,
		}
	case "terra":
		coin = CoinInfo{
			"terra",
			"Terra",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/330'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPTerra,
			"LUNA",
			6,
			"https://terra.stake.id/#/tx/",
			"https://terra.stake.id/#/address/",
			330,
		}
	case "polkadot":
		coin = CoinInfo{
			"polkadot",
			"Polkadot",
			C.TWBlockchainPolkadot,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/354'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"DOT",
			10,
			"https://polkadot.subscan.io/extrinsic/",
			"https://polkadot.subscan.io/account/",
			354,
		}
	case "near":
		coin = CoinInfo{
			"near",
			"NEAR",
			C.TWBlockchainNEAR,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/397'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NEAR",
			24,
			"https://explorer.near.org/transactions/",
			"https://explorer.near.org/accounts/",
			397,
		}
	case "aion":
		coin = CoinInfo{
			"aion",
			"Aion",
			C.TWBlockchainAion,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/425'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"AION",
			18,
			"https://mainnet.aion.network/#/transaction/",
			"https://mainnet.aion.network/#/account/",
			425,
		}
	case "kusama":
		coin = CoinInfo{
			"kusama",
			"Kusama",
			C.TWBlockchainPolkadot,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/434'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"KSM",
			12,
			"https://kusama.subscan.io/extrinsic/",
			"https://kusama.subscan.io/account/",
			434,
		}
	case "aeternity":
		coin = CoinInfo{
			"aeternity",
			"Aeternity",
			C.TWBlockchainAeternity,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/457'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"AE",
			18,
			"https://explorer.aepps.com/transactions/",
			"https://explorer.aepps.com/account/transactions/",
			457,
		}
	case "kava":
		coin = CoinInfo{
			"kava",
			"Kava",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/459'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPKava,
			"KAVA",
			6,
			"https://kava.mintscan.io/txs/",
			"https://kava.mintscan.io/account/",
			459,
		}
	case "filecoin":
		coin = CoinInfo{
			"filecoin",
			"Filecoin",
			C.TWBlockchainFilecoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/461'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"FIL",
			18,
			"https://filfox.info/en/message/",
			"https://filfox.info/en/address/",
			461,
		}
	case "oasis":
		coin = CoinInfo{
			"oasis",
			"Oasis",
			C.TWBlockchainOasisNetwork,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/474'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPOasis,
			"ROSE",
			9,
			"https://oasisscan.com/transactions/",
			"https://oasisscan.com/accounts/detail/",
			474,
		}
	case "bluzelle":
		coin = CoinInfo{
			"bluzelle",
			"Bluzelle",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/483'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPBluzelle,
			"BLZ",
			6,
			"https://bigdipper.net.bluzelle.com/transactions/",
			"https://bigdipper.net.bluzelle.com/account/",
			483,
		}
	case "band":
		coin = CoinInfo{
			"band",
			"BandChain",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/494'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPBandChain,
			"BAND",
			6,
			"https://scan-wenchang-testnet2.bandchain.org//tx/",
			"https://scan-wenchang-testnet2.bandchain.org//account/",
			494,
		}
	case "theta":
		coin = CoinInfo{
			"theta",
			"Theta",
			C.TWBlockchainTheta,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/500'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"THETA",
			18,
			"https://explorer.thetatoken.org/txs/",
			"https://explorer.thetatoken.org/account/",
			500,
		}
	case "solana":
		coin = CoinInfo{
			"solana",
			"Solana",
			C.TWBlockchainSolana,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/501'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"SOL",
			9,
			"https://solscan.io/tx/",
			"https://solscan.io/account/",
			501,
		}
	case "elrond":
		coin = CoinInfo{
			"elrond",
			"Elrond",
			C.TWBlockchainElrondNetwork,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/508'/0'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPElrond,
			"eGLD",
			18,
			"https://explorer.elrond.com/transactions/",
			"https://explorer.elrond.com/address/",
			508,
		}
	case "binance":
		coin = CoinInfo{
			"binance",
			"BNB",
			C.TWBlockchainBinance,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/714'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPBinance,
			"BNB",
			8,
			"https://explorer.binance.org/tx/",
			"https://explorer.binance.org/address/",
			714,
		}
	case "vechain":
		coin = CoinInfo{
			"vechain",
			"VeChain",
			C.TWBlockchainVechain,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/818'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"VET",
			18,
			"https://explore.vechain.org/transactions/",
			"https://explore.vechain.org/accounts/",
			818,
		}
	case "callisto":
		coin = CoinInfo{
			"callisto",
			"Callisto",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/820'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"CLO",
			18,
			"https://explorer2.callisto.network/tx/",
			"https://explorer2.callisto.network/addr/",
			820,
		}
	case "neo":
		coin = CoinInfo{
			"neo",
			"NEO",
			C.TWBlockchainNEO,
			C.TWPurposeBIP44,
			C.TWCurveNIST256p1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/888'/0'/0/0",
			C.TWPublicKeyTypeNIST256p1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NEO",
			8,
			"https://neoscan.io/transaction/",
			"https://neoscan.io/address/",
			888,
		}
	case "tomochain":
		coin = CoinInfo{
			"tomochain",
			"TomoChain",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/889'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"TOMO",
			18,
			"https://scan.tomochain.com/txs/",
			"https://scan.tomochain.com/address/",
			889,
		}
	case "thorchain":
		coin = CoinInfo{
			"thorchain",
			"THORChain",
			C.TWBlockchainCosmos,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/931'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPTHORChain,
			"RUNE",
			8,
			"https://viewblock.io/thorchain/tx/",
			"https://viewblock.io/thorchain/address/",
			931,
		}
	case "polygon":
		coin = CoinInfo{
			"polygon",
			"Polygon",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"MATIC",
			18,
			"https://polygonscan.com/tx/",
			"https://polygonscan.com/address/",
			966,
		}
	case "thundertoken":
		coin = CoinInfo{
			"thundertoken",
			"Thunder Token",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/1001'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"TT",
			18,
			"https://scan.thundercore.com/transactions/",
			"https://scan.thundercore.com/address/",
			1001,
		}
	case "harmony":
		coin = CoinInfo{
			"harmony",
			"Harmony",
			C.TWBlockchainHarmony,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/1023'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPHarmony,
			"ONE",
			18,
			"https://explorer.harmony.one/#/tx/",
			"https://explorer.harmony.one/#/address/",
			1023,
		}
	case "ontology":
		coin = CoinInfo{
			"ontology",
			"Ontology",
			C.TWBlockchainOntology,
			C.TWPurposeBIP44,
			C.TWCurveNIST256p1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/1024'/0'/0/0",
			C.TWPublicKeyTypeNIST256p1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ONT",
			0,
			"https://explorer.ont.io/transaction/",
			"https://explorer.ont.io/address/",
			1024,
		}
	case "tezos":
		coin = CoinInfo{
			"tezos",
			"Tezos",
			C.TWBlockchainTezos,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/1729'/0'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"XTZ",
			6,
			"https://tzstats.com/",
			"https://tzstats.com/",
			1729,
		}
	case "cardano":
		coin = CoinInfo{
			"cardano",
			"Cardano",
			C.TWBlockchainCardano,
			C.TWPurposeBIP1852,
			C.TWCurveED25519Extended,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/1852'/1815'/0'/0/0",
			C.TWPublicKeyTypeED25519Extended,
			0,
			0,
			0,
			C.TWHRPCardano,
			"ADA",
			6,
			"https://shelleyexplorer.cardano.org/tx/",
			"https://shelleyexplorer.cardano.org/address/",
			1815,
		}
	case "kin":
		coin = CoinInfo{
			"kin",
			"Kin",
			C.TWBlockchainStellar,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/2017'/0'",
			C.TWPublicKeyTypeED25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"KIN",
			5,
			"https://www.kin.org/blockchainInfoPage/?&dataType=public&header=Transaction&id=",
			"https://www.kin.org/blockchainAccount/?&dataType=public&header=accountID&id=",
			2017,
		}
	case "qtum":
		coin = CoinInfo{
			"qtum",
			"Qtum",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/2301'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			58,
			50,
			C.TWHRPQtum,
			"QTUM",
			8,
			"https://qtum.info/tx/",
			"https://qtum.info/address/",
			2301,
		}
	case "nebulas":
		coin = CoinInfo{
			"nebulas",
			"Nebulas",
			C.TWBlockchainNebulas,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/2718'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NAS",
			18,
			"https://explorer.nebulas.io/#/tx/",
			"https://explorer.nebulas.io/#/address/",
			2718,
		}
	case "gochain":
		coin = CoinInfo{
			"gochain",
			"GoChain",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/6060'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"GO",
			18,
			"https://explorer.gochain.io/tx/",
			"https://explorer.gochain.io/addr/",
			6060,
		}
	case "nuls":
		coin = CoinInfo{
			"nuls",
			"NULS",
			C.TWBlockchainNULS,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/8964'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"NULS",
			8,
			"https://nulscan.io/transaction/info?hash=",
			"https://nulscan.io/address/info?address=",
			8964,
		}
	case "zelcash":
		coin = CoinInfo{
			"zelcash",
			"Flux",
			C.TWBlockchainBitcoin,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionXPUB,
			C.TWHDVersionXPRV,
			"m/44'/19167'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1,
			28,
			184,
			189,
			C.TWHRPUnknown,
			"FLUX",
			8,
			"https://explorer.runonflux.io/tx/",
			"https://explorer.runonflux.io/address/",
			19167,
		}
	case "wanchain":
		coin = CoinInfo{
			"wanchain",
			"Wanchain",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/5718350'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"WAN",
			18,
			"https://www.wanscan.org/tx/",
			"https://www.wanscan.org/address/",
			5718350,
		}
	case "waves":
		coin = CoinInfo{
			"waves",
			"Waves",
			C.TWBlockchainWaves,
			C.TWPurposeBIP44,
			C.TWCurveED25519,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/5741564'/0'/0'/0'",
			C.TWPublicKeyTypeCURVE25519,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"WAVES",
			8,
			"https://wavesexplorer.com/tx/",
			"https://wavesexplorer.com/address/",
			5741564,
		}
	case "optimism":
		coin = CoinInfo{
			"optimism",
			"Optimistic Ethereum",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"OETH",
			18,
			"https://optimistic.etherscan.io/tx/",
			"https://optimistic.etherscan.io/address/",
			60,
		}
	case "heco":
		coin = CoinInfo{
			"heco",
			"ECO Chain",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"HT",
			18,
			"https://hecoinfo.com/tx/",
			"https://hecoinfo.com/address/",
			553,
		}
	case "bsc":
		coin = CoinInfo{
			"bsc",
			"Smart Chain Legacy",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/714'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"BNB",
			18,
			"https://bscscan.com/tx/",
			"https://bscscan.com/address/",
			714,
		}
	case "arbitrum":
		coin = CoinInfo{
			"arbitrum",
			"Arbitrum",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"ARETH",
			18,
			"https://explorer.offchainlabs.com/tx/",
			"https://explorer.offchainlabs.com/address/",
			60,
		}
	case "smartchain":
		coin = CoinInfo{
			"smartchain",
			"Smart Chain",
			C.TWBlockchainEthereum,
			C.TWPurposeBIP44,
			C.TWCurveSECP256k1,
			C.TWHDVersionNone,
			C.TWHDVersionNone,
			"m/44'/60'/0'/0/0",
			C.TWPublicKeyTypeSECP256k1Extended,
			0,
			0,
			0,
			C.TWHRPUnknown,
			"BNB",
			18,
			"https://bscscan.com/tx/",
			"https://bscscan.com/address/",
			714,
		}
	default:
		return nil, errors.New("coin not supported")
	}

	return &coin, nil
}
